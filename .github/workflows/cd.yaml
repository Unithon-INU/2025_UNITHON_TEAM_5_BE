name: CD - Deploy to GCP (prod compose)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. DockerHub 로그인
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # 3. Docker 이미지 빌드 & 푸시
      - name: Build and push backend Docker image
        run: |
          IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/curelingo-backend
          docker build -t $IMAGE_NAME:latest -f Dockerfile .
          docker push $IMAGE_NAME:latest

      # 4. SSH 프라이빗키 생성 (github action용)
      - name: Create SSH private key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.GCP_SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      # 5. 서버에 app 디렉토리 생성
      - name: Create app directory on GCP
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.GCP_SERVER_USER }}@${{ secrets.GCP_SERVER_HOST }} "mkdir -p ~/app"

      # 6. 서버에 docker-compose.prod.yaml 전송
      - name: Upload docker-compose.prod.yaml
        run: |
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ./docker-compose.prod.yaml ${{ secrets.GCP_SERVER_USER }}@${{ secrets.GCP_SERVER_HOST }}:~/app/docker-compose.prod.yaml

      # 7. 서버에 nginx 설정파일 전송
      - name: Upload nginx config directory
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.GCP_SERVER_USER }}@${{ secrets.GCP_SERVER_HOST }} "rm -rf ~/app/nginx"
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -r ./nginx ${{ secrets.GCP_SERVER_USER }}@${{ secrets.GCP_SERVER_HOST }}:~/app/

      # 8. .env 파일 서버에 작성 (내용은 secret에서)
      - name: Upload .env file
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.GCP_SERVER_USER }}@${{ secrets.GCP_SERVER_HOST }} "echo '${{ secrets.ENV_FILE_CONTENTS }}' > ~/app/.env"

      # 9. 서버에서 최신 이미지 pull & docker compose up
      - name: Deploy on GCP server
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.GCP_SERVER_USER }}@${{ secrets.GCP_SERVER_HOST }} << 'EOF'
          cd ~/app
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/curelingo-backend:latest
          docker compose -f docker-compose.prod.yaml down
          docker compose -f docker-compose.prod.yaml up -d --remove-orphans
          EOF