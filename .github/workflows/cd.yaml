name: CD - Build, Push Docker, Deploy

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env file from secret
        run: echo "${{ secrets.ENV_FILE_CONTENTS }}" > .env

      - name: Ensure nginx dir and conf exist
        run: |
          mkdir -p nginx
          if [ ! -f nginx/nginx.conf ]; then echo "# default nginx config" > nginx/nginx.conf; fi

      - name: Check files before deploy
        run: |
          ls -al
          ls -al nginx

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build project (no test)
        run: ./gradlew build --no-daemon -x test

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/curelingo-backend:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/curelingo-backend:latest

      - name: Copy files to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.GCP_SERVER_HOST }}
          username: curelingo
          key: ${{ secrets.GCP_SERVER_SSH_KEY }}
          port: 22
          source: |
            docker-compose.prod.yaml
            .env
            nginx/nginx.conf
          target: /home/curelingo/app/

      - name: Deploy via docker compose
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.GCP_SERVER_HOST }}
          username: curelingo
          key: ${{ secrets.GCP_SERVER_SSH_KEY }}
          port: 22
          script: |
            cd /home/curelingo/app
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
            docker compose -f docker-compose.prod.yaml pull
            docker compose -f docker-compose.prod.yaml down --remove-orphans || true
            docker compose -f docker-compose.prod.yaml up -d --pull always --build
            docker system prune -af